@model Faces.Application.Models.ImageViewModel

@{
    ViewData["Title"] = "Evaluation Details";
}

<style>
    img {
        margin-bottom: 3%;
    }

    .face-summary {
        margin-bottom: 3%;
        font-size: 20px !important;
    }

    .btn-create {
        width: 40%;
        font-size: 30px;
    }
</style>

<div class="page">
    <div class="text-center">
        <canvas id="ImgCanvas" style="background-image: url(@Model.OriginalImage.ImageUrl); display: none"></canvas>
        <img id="Img" src="@Model.OriginalImage.ImageUrl">
    </div>
    <h2>Summary</h2>
    @foreach (var face in Model.NeuralResult.Faces)
    {
        <div class="face-summary">
            <h3>Found face</h3>
            <p>Age : @face.Attributes.Age.Value</p>
            <p>Gender: @face.Attributes.Gender.Value</p>
            @if (face.Attributes.Smile.Value > face.Attributes.Smile.Threshold)
            {
                <p>Smile: Smiling</p>
            }
            else
            {
                <p>Smile: Not smiling</p>
            }
            <p>Glass: @face.Attributes.Glass.Value</p>
            @{
                var leftEye = face.Attributes.EyeStatus.LeftEyeStatus;
                if (leftEye.NoGlassEyeOpen + leftEye.NormalGlassEyeOpen > 50)
                {
                    <p>Left eye: Open</p>
                }
                else
                {
                    if (leftEye.NoGlassEyeClose + leftEye.NormalGlassEyeClose > 50)
                    {
                        <p>Left eye: Closed</p>
                    }
                    else
                    {
                        <p>Left eye: Not visible on a picture</p>
                    }
                }
            }
            @{
                var rightEye = face.Attributes.EyeStatus.RightEyeStatus;
                if (rightEye.NoGlassEyeOpen + rightEye.NormalGlassEyeOpen > 50)
                {
                    <p>Right eye: Open</p>
                }
                else
                {
                    if (rightEye.NoGlassEyeClose + rightEye.NormalGlassEyeClose > 50)
                    {
                        <p>Right eye: Closed</p>
                    }
                    else
                    {
                        <p>Right eye: Not visible on a picture</p>
                    }
                }
            }
        </div>
    }
</div>

<div>
    <p><button class="btn btn-lg btn-primary" onclick="drawFaceRectangles()">See Landmarks</button></p>
</div>
<div class="text-center">
    <a class="btn btn-lg btn-primary btn-create" asp-action="Create">Try another image</a>
</div>

<script type="text/javascript">
    function drawFaceRectangles() {
        var Img = document.querySelector("#Img");
        var realWidth = Img.naturalWidth;
        var realHeight = Img.naturalHeight;

        var canvas = document.querySelector("#ImgCanvas");
        canvas.width = realWidth;
        canvas.height = realHeight;

        var ctx = canvas.getContext("2d");
        ctx.lineWidth = 3;
        ctx.strokeStyle = 'red';
            @foreach (var face in Model.NeuralResult.Faces)
            {
                <text>
                ctx.moveTo(@face.FaceRectangle.Left, @face.FaceRectangle.Top);
                ctx.lineTo(@face.FaceRectangle.Left, @face.FaceRectangle.Top+@face.FaceRectangle.Height);
                ctx.stroke();

                ctx.lineTo(@face.FaceRectangle.Left+@face.FaceRectangle.Width, @face.FaceRectangle.Top+@face.FaceRectangle.Height);
                ctx.stroke();

                ctx.lineTo(@face.FaceRectangle.Left+@face.FaceRectangle.Width, @face.FaceRectangle.Top);
                ctx.stroke();

                ctx.lineTo(@face.FaceRectangle.Left, @face.FaceRectangle.Top);
                ctx.stroke();
                </text>
            }

        Img.style.display = 'none';
        canvas.style.display = 'initial';
    }
</script>
